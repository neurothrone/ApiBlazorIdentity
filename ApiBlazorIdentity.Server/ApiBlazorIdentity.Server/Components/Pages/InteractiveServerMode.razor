@page "/interactive-server"
@rendermode InteractiveServer
@using ApiBlazorIdentity.Shared.Models
@using ApiBlazorIdentity.Shared.Services

<h3>This component is rendered with <b>interactive server-side rendering</b></h3>

<button class="btn btn-primary" @onclick="CallApiAsync">Call Remote API</button>
<button class="btn btn-primary" @onclick="CallBlazorApiAsync">Call Blazor API</button>

@if (_skills == null)
{
    <p><em>No results from API calls yet...</em></p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var skill in _skills)
        {
            <tr>
                <td>@skill.Id</td>
                <td>@skill.Name</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {

    [Inject]
    private ISkillService SkillService { get; set; } = null!;

    private List<Skill>? _skills;

    private async Task CallBlazorApiAsync()
    {
        _skills = (await SkillService.GetSkillsFromServerAsync())
            .ToList();
    }

    private async Task CallApiAsync()
    {
        _skills = (await SkillService.GetSkillsFromApiAsync())
            .ToList();
    }

}
